{"version":3,"sources":["file-view.js","components/file-content-view/image.js","components/file-content-view/svg.js","components/file-content-view/pdf.js","components/file-content-view/video.js","components/file-content-view/audio.js"],"names":["window","app","pageOptions","fileType","err","InnerFileView","content","tip","canUseThumbnail","React","Component","ReactDOM","render","document","getElementById","previousImageUrl","nextImageUrl","repoID","repoEncrypted","fileExt","filePath","fileName","thumbnailSizeForOriginal","previousImage","nextImage","rawPath","xmindImageSrc","siteRoot","Utils","encodePath","FileContent","props","handleLoadFailure","setState","loadFailed","state","addEventListener","e","keyCode","location","href","this","thumbnailURL","includes","xmindSrc","className","id","title","gettext","src","alt","onError","videoJsOptions","autoplay","controls","preload","sources"],"mappings":"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","file":"static/js/fileView.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport FileView from './components/file-view/file-view';\nimport FileViewTip from './components/file-view/file-view-tip';\nimport Image from './components/file-content-view/image';\nimport SVG from './components/file-content-view/svg';\nimport PDF from './components/file-content-view/pdf';\nimport Video from './components/file-content-view/video';\nimport Audio from './components/file-content-view/audio';\n\nconst {\n  fileType, err\n} = window.app.pageOptions;\n\nclass InnerFileView extends React.Component {\n\n  render() {\n    if (err) {\n      return (\n        <FileView content={<FileViewTip />} />\n      );\n    }\n\n    let content;\n    switch (fileType) {\n      case 'Image':\n        content = <Image tip={<FileViewTip />} canUseThumbnail={true} />;\n        break;\n      case 'XMind':\n        content = <Image tip={<FileViewTip />} />;\n        break;\n      case 'SVG':\n        content = <SVG />;\n        break;\n      case 'PDF':\n        content = <PDF />;\n        break;\n      case 'Video':\n        content = <Video />;\n        break;\n      case 'Audio':\n        content = <Audio />;\n        break;\n    }\n\n    return (\n      <FileView content={content} />\n    );\n  }\n}\n\nReactDOM.render (\n  <InnerFileView />,\n  document.getElementById('wrapper')\n);\n","import React from 'react';\nimport { Utils } from '../../utils/utils';\nimport { gettext, siteRoot } from '../../utils/constants';\n\nimport '../../css/image-file-view.css';\n\nconst {\n  repoID, repoEncrypted,\n  fileExt, filePath, fileName,\n  thumbnailSizeForOriginal,\n  previousImage, nextImage, rawPath,\n  xmindImageSrc // for xmind file\n} = window.app.pageOptions;\n\nlet previousImageUrl, nextImageUrl;\nif (previousImage) {\n  previousImageUrl = `${siteRoot}lib/${repoID}/file${Utils.encodePath(previousImage)}`;\n}\nif (nextImage) {\n  nextImageUrl = `${siteRoot}lib/${repoID}/file${Utils.encodePath(nextImage)}`;\n}\n\nclass FileContent extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      loadFailed: false\n    };\n  }\n\n  componentDidMount() {\n    document.addEventListener('keydown', (e) => {\n      if (previousImage && e.keyCode == 37) { // press '<-'\n        location.href = previousImageUrl;\n      }\n      if (nextImage && e.keyCode == 39) { // press '->'\n        location.href = nextImageUrl;\n      }\n    });\n  }\n\n  handleLoadFailure = () => {\n    this.setState({\n      loadFailed: true\n    });\n  }\n\n  render() {\n    if (this.state.loadFailed) {\n      return this.props.tip;\n    }\n\n    // request thumbnails for some files\n    // only for 'file view'. not for 'history/trash file view'\n    let thumbnailURL = '';\n    const fileExtList = ['tif', 'tiff', 'psd'];\n    if (this.props.canUseThumbnail && !repoEncrypted && fileExtList.includes(fileExt)) {\n      thumbnailURL = `${siteRoot}thumbnail/${repoID}/${thumbnailSizeForOriginal}${Utils.encodePath(filePath)}`;\n    }\n\n    // for xmind file\n    const xmindSrc = xmindImageSrc ? `${siteRoot}${xmindImageSrc}` : '';\n\n    return (\n      <div className=\"file-view-content flex-1 image-file-view\">\n        {previousImage && (\n          <a href={previousImageUrl} id=\"img-prev\" title={gettext('you can also press ← ')}><span className=\"fas fa-chevron-left\"></span></a>\n        )}\n        {nextImage && (\n          <a href={nextImageUrl} id=\"img-next\" title={gettext('you can also press →')}><span className=\"fas fa-chevron-right\"></span></a>\n        )}\n        <img src={xmindSrc || thumbnailURL || rawPath} alt={fileName} id=\"image-view\" onError={this.handleLoadFailure} />\n      </div>\n    );\n  }\n}\n\nexport default FileContent;\n","import React from 'react';\n\nimport '../../css/svg-file-view.css';\n\nconst {\n  fileName, rawPath\n} = window.app.pageOptions;\n\nclass FileContent extends React.Component {\n  render() {\n    return (\n      <div className=\"file-view-content flex-1 svg-file-view\">\n        <img src={rawPath} alt={fileName} id=\"svg-view\" />\n      </div>\n    );\n  }\n}\n\nexport default FileContent;\n","import React from 'react';\nimport PDFViewer from '../pdf-viewer';\n\nimport '../../css/pdf-file-view.css';\n\nclass FileContent extends React.Component {\n  render() {\n    return (\n      <div className=\"file-view-content flex-1 pdf-file-view\">\n        <PDFViewer />\n      </div>\n    );\n  }\n}\n\nexport default FileContent;\n","import React from 'react';\nimport VideoPlayer from '../video-player';\n\nimport '../../css/video-file-view.css';\n\nconst {\n  rawPath\n} = window.app.pageOptions;\n\nclass FileContent extends React.Component {\n  render() {\n    const videoJsOptions = {\n      autoplay: false,\n      controls: true,\n      preload: 'auto',\n      sources: [{\n        src: rawPath\n      }]\n    };\n    return (\n      <div className=\"file-view-content flex-1 video-file-view\">\n        <VideoPlayer { ...videoJsOptions } />\n      </div>\n    );\n  }\n}\n\nexport default FileContent;\n","import React from 'react';\nimport AudioPlayer from '../audio-player';\n\nimport '../../css/audio-file-view.css';\n\nconst { rawPath } = window.app.pageOptions;\n\nclass FileContent extends React.Component {\n  render() {\n    const videoJsOptions = {\n      autoplay: false,\n      controls: true,\n      preload: 'auto',\n      sources: [{\n        src: rawPath\n      }]\n    };\n    return (\n      <div className=\"file-view-content flex-1 audio-file-view\">\n        <AudioPlayer { ...videoJsOptions } />\n      </div>\n    );\n  }\n}\n\nexport default FileContent;\n"],"sourceRoot":""}