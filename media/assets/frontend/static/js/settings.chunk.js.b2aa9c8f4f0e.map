{"version":3,"sources":["components/user-settings/side-nav.js","components/user-settings/user-avatar-form.js","components/user-settings/user-basic-info-form.js","components/user-settings/web-api-auth-token.js","components/dialog/update-webdav-password.js","components/user-settings/webdav-password.js","components/user-settings/language-setting.js","components/user-settings/list-in-address-book.js","components/user-settings/email-notice.js","components/user-settings/two-factor-auth.js","components/dialog/confirm-disconnect-wechat.js","components/user-settings/social-login.js","components/dialog/confirm-disconnect-dingtalk.js","components/user-settings/social-login-dingtalk.js","components/dialog/confirm-delete-account.js","components/user-settings/delete-account.js","settings.js"],"names":["SideNav","props","className","this","data","map","item","index","show","key","curItemID","href","substr","text","React","Component","window","app","pageOptions","avatarURL","csrfToken","UserAvatarForm","fileInputChange","fileInput","current","files","length","file","fileName","name","lastIndexOf","toaster","danger","gettext","duration","fileExt","toLowerCase","allowedExt","indexOf","errorMsg","replace","join","size","seafileAPI","updateUserAvatar","then","res","setState","avatarSrc","avatar_url","success","catch","error","Utils","getErrorMsg","openFileInput","click","handleMouseOver","isEditShown","handleMouseOut","createRef","form","state","ref","encType","method","action","siteRoot","type","value","onMouseOver","onMouseOut","src","width","height","alt","onChange","onClick","nameLabel","enableUpdateUserInfo","enableUserSetContactEmail","UserBasicInfoForm","handleNameInputChange","e","target","handleContactEmailInputChange","contactEmail","handleSubmit","preventDefault","contact_email","updateUserInfo","userInfo","login_id","loginID","onSubmit","htmlFor","id","disabled","readOnly","WebAPIAuthToken","getAuthToken","getAuthTokenBySession","authToken","token","errMessage","UpdateWebdavPassword","submit","btnDisabled","updatePassword","password","handleInputChange","passwd","trim","togglePasswordVisible","isPasswordVisible","generatePassword","randomPassword","possible","i","charAt","Math","floor","random","toggle","centered","isOpen","addonType","color","webdavPasswd","WebdavPassword","updateWebdavSecret","toggleDialog","isDialogOpen","Fragment","max","currentLang","langList","LanguageSetting","onSelectChange","selectedItem","location","options","langCode","label","langName","defaultValue","ListInAddressBook","checked","inputChecked","list_in_address_book","toString","initialEmailNotificationInterval","EmailNotice","inputChange","currentInterval","formSubmit","updateEmailNotificationInterval","intervalOptions","interval","defaultDevice","backupTokens","TwoFactorAuthentication","renderEnabled","renderDisabled","ConfirmDisconnectWechat","disconnect","formActionURL","socialConnected","socialNextPage","SocialLogin","confirmDisconnect","isConfirmDialogOpen","encodeURIComponent","ConfirmDisconnectDingtalk","socialConnectedDingtalk","SocialLoginDintalk","ConfirmDeleteAccount","DeleteAccount","confirmDelete","canUpdatePassword","passwordOperationText","enableGetAuthToken","enableWebdavSecret","enableAddressBook","twoFactorAuthEnabled","enableWechatWork","enableDingtalk","enableDeleteAccount","Settings","onSearchedClick","is_dir","url","repo_id","repo_name","path","navigate","repalce","encodePath","open","handleContentScroll","scrollTop","scrolled","sideNavItems","filter","document","getElementById","offsetTop","isPro","getUserInfo","mediaUrl","logoPath","logoHeight","logoWidth","title","siteTitle","onScroll","ReactDOM","render"],"mappings":"gTAoBeA,E,kDAhBb,WAAYC,GAAQ,uCACZA,G,qDAGE,IAAD,OACP,OACE,wBAAIC,UAAU,oCACXC,KAAKF,MAAMG,KAAKC,KAAI,SAACC,EAAMC,GAC1B,OAAOD,EAAKE,KACV,wBAAIC,IAAKF,EAAOL,UAAS,mBAAc,EAAKD,MAAMS,WAAaJ,EAAKK,KAAKC,OAAO,IAAM,WAAY,uBAAGV,UAAU,WAAWS,KAAML,EAAKK,MAAOL,EAAKO,OAAiB,a,GAXxJC,IAAMC,W,ECIKC,OAAOC,IAAIC,YAApCC,E,EAAAA,UAAWC,E,EAAAA,UA2FJC,E,kDAvFb,WAAYpB,GAAQ,IAAD,8BACjB,cAAMA,IASRqB,gBAAkB,WAGhB,GAAK,EAAKC,UAAUC,QAAQC,MAAMC,OAAlC,CAIA,IAAMC,EAAO,EAAKJ,UAAUC,QAAQC,MAAM,GACpCG,EAAWD,EAAKE,KAGtB,IAAkC,GAA9BD,EAASE,YAAY,KAIvB,OAHAC,IAAQC,OAAOC,aAAQ,gCAAiC,CACtDC,SAAU,KAEL,EAGT,IAAMC,EAAUP,EAAShB,OAAQgB,EAASE,YAAY,KAAO,GAAIM,cAC3DC,EAAa,CAAC,MAAM,OAAQ,MAAO,OACzC,IAAoC,GAAhCA,EAAWC,QAAQH,GAAgB,CACrC,IAAMI,EAAWN,aAAQ,8CACtBO,QAAQ,gBAAiBH,EAAWI,KAAK,OAE5C,OADAV,IAAQC,OAAOO,EAAU,CAACL,SAAU,KAC7B,EAIT,GAAIP,EAAKe,KAAO,QAAW,CACzB,IAAMH,EAAWN,aAAQ,uDAEzB,OADAF,IAAQC,OAAOO,EAAU,CAACL,SAAU,KAC7B,EAITS,IAAWC,iBAAiBjB,EAAM,KAAKkB,MAAK,SAACC,GAC3C,EAAKC,SAAS,CACZC,UAAWF,EAAI1C,KAAK6C,aAEtBlB,IAAQmB,QAAQjB,aAAQ,eACvBkB,OAAM,SAACC,GACR,IAAIb,EAAWc,IAAMC,YAAYF,GACjCrB,IAAQC,OAAOO,QApDA,EAwDnBgB,cAAgB,WACd,EAAKhC,UAAUC,QAAQgC,SAzDN,EA4DnBC,gBAAkB,WAChB,EAAKV,SAAS,CACZW,aAAa,KA9DE,EAkEnBC,eAAiB,WACf,EAAKZ,SAAS,CACZW,aAAa,KAlEf,EAAKnC,UAAYT,IAAM8C,YACvB,EAAKC,KAAO/C,IAAM8C,YAClB,EAAKE,MAAQ,CACXd,UAAW7B,EACXuC,aAAa,GANE,E,qDAyEjB,OACE,0BAAMK,IAAK5D,KAAK0D,KAAM3D,UAAU,iBAAiB8D,QAAQ,sBAAsBC,OAAO,OAAOC,OAAM,UAAKC,KAAL,gBACjG,2BAAOC,KAAK,SAASvC,KAAK,sBAAsBwC,MAAOjD,IACvD,2BAAOlB,UAAU,2BAA2B+B,aAAQ,YACpD,yBAAK/B,UAAU,6BAA6BoE,YAAanE,KAAKsD,gBAAiBc,WAAYpE,KAAKwD,gBAC9F,yBAAKa,IAAKrE,KAAK2D,MAAMd,UAAWyB,MAAM,KAAKC,OAAO,KAAKC,IAAI,GAAGzE,UAAU,gBACxE,2BAAOkE,KAAK,OAAOvC,KAAK,SAAS3B,UAAU,SAAS0E,SAAUzE,KAAKmB,gBAAiByC,IAAK5D,KAAKoB,YAC9F,0BAAMrB,UAAS,mCAA8BC,KAAK2D,MAAMJ,aAAe,UAAYmB,QAAS1E,KAAKoD,sB,GAlF9EzC,IAAMC,W,ECD/BC,OAAOC,IAAIC,YAHb4D,E,EAAAA,UACAC,E,EAAAA,qBACAC,E,EAAAA,0BAqFaC,E,kDAhFb,WAAYhF,GAAQ,IAAD,uBACjB,cAAMA,IAaRiF,sBAAwB,SAACC,GACvB,EAAKpC,SAAS,CACZlB,KAAMsD,EAAEC,OAAOf,SAhBA,EAoBnBgB,8BAAgC,SAACF,GAC/B,EAAKpC,SAAS,CACZuC,aAAcH,EAAEC,OAAOf,SAtBR,EA0BnBkB,aAAe,SAACJ,GACdA,EAAEK,iBACF,IAAIpF,EAAO,CACTyB,KAAM,EAAKiC,MAAMjC,MAEfmD,IACF5E,EAAKqF,cAAgB,EAAK3B,MAAMwB,cAElC,EAAKrF,MAAMyF,eAAetF,IAlCT,MAMb,EAAKH,MAAM0F,SAHbF,EAHe,EAGfA,cACAG,EAJe,EAIfA,SACA/D,EALe,EAKfA,KALe,OAOjB,EAAKiC,MAAQ,CACXwB,aAAcG,EACdI,QAASD,EACT/D,KAAMA,GAVS,E,qDAqCT,IAAD,EAKH1B,KAAK2D,MAHPwB,EAFK,EAELA,aACAO,EAHK,EAGLA,QACAhE,EAJK,EAILA,KAGF,OACE,0BAAMqC,OAAO,GAAGD,OAAO,OAAO6B,SAAU3F,KAAKoF,cAE3C,yBAAKrF,UAAU,kBACb,2BAAOA,UAAU,0BAA0B6F,QAAQ,QAAQjB,GAC3D,yBAAK5E,UAAU,YACb,2BAAOA,UAAU,eAAe8F,GAAG,OAAO5B,KAAK,OAAOvC,KAAK,WAAWwC,MAAOxC,EAAMoE,UAAWlB,EAAsBH,SAAUzE,KAAK+E,0BAItIW,GACC,yBAAK3F,UAAU,kBACb,2BAAOA,UAAU,0BAA0B6F,QAAQ,aAAa9D,aAAQ,cACxE,yBAAK/B,UAAU,YACb,2BAAOA,UAAU,eAAe8F,GAAG,YAAY5B,KAAK,OAAOvC,KAAK,WAAWwC,MAAOwB,EAASI,UAAU,EAAMC,UAAU,KAEvH,uBAAGhG,UAAU,0BAA0B+B,aAAQ,uCAIjDqD,GAAgBN,IAChB,yBAAK9E,UAAU,kBACb,2BAAOA,UAAU,0BAA0B6F,QAAQ,iBAAiB9D,aAAQ,mBAC5E,yBAAK/B,UAAU,YACb,2BAAOA,UAAU,eAAe8F,GAAG,gBAAgB5B,KAAK,OAAOvC,KAAK,gBAAgBwC,MAAOiB,EAAcW,UAAWjB,EAA2BkB,UAAWlB,EAA2BJ,SAAUzE,KAAKkF,iCAEtM,uBAAGnF,UAAU,0BAA0B+B,aAAQ,oDAInD,4BAAQmC,KAAK,SAASlE,UAAU,sCAAsC+F,UAAWlB,GAAuB9C,aAAQ,gB,GA5ExFnB,IAAMC,WC+BvBoF,E,kDAhCb,WAAYlG,GAAQ,IAAD,8BACjB,cAAMA,IAMRmG,aAAe,WACbzD,IAAW0D,wBAAwBxD,MAAK,SAACC,GACvC,EAAKC,SAAS,CACZuD,UAAWxD,EAAI1C,KAAKmG,WAErBpD,OAAM,SAACC,GACR,IAAIoD,EAAanD,IAAMC,YAAYF,GACnCrB,IAAQC,OAAOwE,OAZjB,EAAK1C,MAAQ,CACXwC,UAAW,UAHI,E,qDAkBT,IACAA,EAAcnG,KAAK2D,MAAnBwC,UACR,OACE,yBAAKN,GAAG,iBAAiB9F,UAAU,gBACjC,wBAAIA,UAAU,wBAAwB+B,aAAQ,uBAC9C,yBAAK/B,UAAU,6BACb,2BAAOkE,KAAK,OAAO8B,UAAU,EAAM7B,MAAOiC,EAAWpG,UAAU,+BAC/D,4BAAQA,UAAU,0BAA0B2E,QAAS1E,KAAKiG,cAAenE,aAAQ,c,GA3B7DnB,IAAMC,W,eCuErB0F,E,kDAhEb,WAAYxG,GAAQ,IAAD,8BACjB,cAAMA,IAQRyG,OAAS,WACP,EAAK3D,SAAS,CACZ4D,aAAa,IAEf,EAAK1G,MAAM2G,eAAe,EAAK9C,MAAM+C,WAbpB,EAgBnBC,kBAAoB,SAAC3B,GACnB,IAAI4B,EAAS5B,EAAEC,OAAOf,MAAM2C,OAC5B,EAAKjE,SAAS,CAAC8D,SAAUE,KAlBR,EAqBnBE,sBAAwB,WACtB,EAAKlE,SAAS,CACZmE,mBAAoB,EAAKpD,MAAMoD,qBAvBhB,EA2BnBC,iBAAmB,WAGjB,IAFA,IAAIC,EAAiB,GACfC,EAAW,iEACRC,EAAI,EAAGA,EAAI,EAAGA,IACrBF,GAAkBC,EAASE,OAAOC,KAAKC,MAAMD,KAAKE,SAAWL,EAAS3F,SAExE,EAAKqB,SAAS,CACZ8D,SAAUO,EACVF,mBAAmB,KAjCrB,EAAKpD,MAAQ,CACX+C,SAAU,EAAK5G,MAAM4G,SACrBK,mBAAmB,EACnBP,aAAa,GALE,E,qDAuCT,IACAgB,EAAWxH,KAAKF,MAAhB0H,OACR,OACE,kBAAC,IAAD,CAAOC,UAAU,EAAMC,QAAQ,EAAMF,OAAQA,GAC3C,kBAAC,IAAD,CAAaA,OAAQA,GAAS1F,aAAQ,oBACtC,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAY/B,UAAU,IACpB,kBAAC,IAAD,CAAOkE,KAAMjE,KAAK2D,MAAMoD,kBAAoB,OAAS,WAAY7C,MAAOlE,KAAK2D,MAAM+C,SAAUjC,SAAUzE,KAAK2G,oBAC5G,kBAAC,IAAD,CAAiBgB,UAAU,UACzB,kBAAC,IAAD,CAAQjD,QAAS1E,KAAK8G,uBAAuB,uBAAG/G,UAAS,cAASC,KAAK2D,MAAMoD,kBAAoB,SAAU,mBAC3G,kBAAC,IAAD,CAAQrC,QAAS1E,KAAKgH,kBAAkB,uBAAGjH,UAAU,qBAI3D,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAQ6H,MAAM,YAAYlD,QAAS8C,GAAS1F,aAAQ,WACpD,kBAAC,IAAD,CAAQ8F,MAAM,UAAUlD,QAAS1E,KAAKuG,OAAQT,SAAU9F,KAAK2D,MAAM6C,aAAc1E,aAAQ,iB,GAzDhElB,aCH3BiH,EAAiBhH,OAAOC,IAAIC,YAA5B8G,aAwEOC,E,kDApEb,WAAYhI,GAAQ,IAAD,8BACjB,cAAMA,IAQRgH,sBAAwB,WACtB,EAAKlE,SAAS,CACZmE,mBAAoB,EAAKpD,MAAMoD,qBAXhB,EAenBN,eAAiB,SAACC,GAChBlE,IAAWuF,mBAAmBrB,GAAUhE,MAAK,SAACC,GAC5C,EAAKqF,eACL,EAAKpF,SAAS,CACZ8D,SAAUA,IAEZ9E,IAAQmB,QAAQjB,aAAQ,eACvBkB,OAAM,SAACC,GACR,IAAIb,EAAWc,IAAMC,YAAYF,GACjC,EAAK+E,eACLpG,IAAQC,OAAOO,OAzBA,EA6BnB4F,aAAe,WACb,EAAKpF,SAAS,CACZqF,cAAe,EAAKtE,MAAMsE,gBA7B5B,EAAKtE,MAAQ,CACX+C,SAAUmB,EACVd,mBAAmB,EACnBkB,cAAc,GALC,E,qDAmCT,IAAD,EACiCjI,KAAK2D,MAArC+C,EADD,EACCA,SAAUK,EADX,EACWA,kBAClB,OACE,kBAAC,IAAMmB,SAAP,KACE,yBAAKrC,GAAG,uBAAuB9F,UAAU,gBACvC,wBAAIA,UAAU,wBAAwB+B,aAAQ,oBAC7C4E,EACC,kBAAC,IAAMwB,SAAP,KACE,yBAAKnI,UAAU,6BACb,2BAAOA,UAAU,YAAY+B,aAAQ,cACrC,2BAAO/B,UAAU,gBAAgBkE,KAAK,OAAOC,MAAO6C,EAAoBL,EAAW,aAAcX,UAAU,EAAMxD,KAAM8E,KAAKc,IAAIzB,EAASnF,OAAQ,MACjJ,0BAAMmD,QAAS1E,KAAK8G,sBAAuB/G,UAAS,uBAAkBC,KAAK2D,MAAMoD,kBAAoB,SAAU,mBAEjH,4BAAQhH,UAAU,+BAA+B2E,QAAS1E,KAAKgI,cAAelG,aAAQ,YAGxF,4BAAQ/B,UAAU,0BAA0B2E,QAAS1E,KAAKgI,cAAelG,aAAQ,kBAGpF9B,KAAK2D,MAAMsE,cACV,kBAAC,IAAD,KACE,kBAAC,EAAD,CACEvB,SAAU1G,KAAK2D,MAAM+C,SACrBD,eAAgBzG,KAAKyG,eACrBe,OAAQxH,KAAKgI,qB,GA7DErH,IAAMC,W,UCJ/BC,OAAOC,IAAIC,YADbqH,E,EAAAA,YAAaC,E,EAAAA,SAoCAC,E,kDA/Bb,WAAYxI,GAAQ,IAAD,8BACjB,cAAMA,IAGRyI,eAAiB,SAACC,GAEhBC,SAASjI,KAAT,UAAmBwD,KAAnB,sBAAyCwE,EAAatE,QANrC,E,qDAUjB,IAAMwE,EAAUL,EAASnI,KAAI,SAACC,EAAMC,GAClC,MAAO,CACL8D,MAAO/D,EAAKwI,SACZC,MAAOzI,EAAK0I,aAIhB,OACE,yBAAK9I,UAAU,eAAe8F,GAAG,gBAC/B,wBAAI9F,UAAU,wBAAwB+B,aAAQ,qBAC9C,kBAAC,IAAD,CACE/B,UAAU,oBACV+I,aAAc,CAAC5E,MAAOkE,EAAYO,SAAUC,MAAOR,EAAYS,UAC/DH,QAASA,EACTjE,SAAUzE,KAAKuI,sB,GA1BK5H,IAAMC,WC8BrBmI,E,kDAjCb,WAAYjJ,GAAQ,IAAD,uBACjB,cAAMA,IAOR6G,kBAAoB,SAAC3B,GACnB,IAAMgE,EAAUhE,EAAEC,OAAO+D,QACzB,EAAKpG,SAAS,CACZqG,aAAcD,IAEhB,EAAKlJ,MAAMyF,eAAe,CACxB2D,qBAAsBF,EAAQG,cAdf,IAETD,EAAyB,EAAKpJ,MAAM0F,SAApC0D,qBAFS,OAGjB,EAAKvF,MAAQ,CACXsF,aAAcC,GAJC,E,qDAkBT,IACAD,EAAiBjJ,KAAK2D,MAAtBsF,aAER,OACE,yBAAKlJ,UAAU,eAAe8F,GAAG,wBAC/B,wBAAI9F,UAAU,wBAAwB+B,aAAQ,wBAC9C,yBAAK/B,UAAU,6BACb,2BAAOkE,KAAK,WAAW4B,GAAG,uBAAuBnE,KAAK,uBAAuB3B,UAAU,OAAOiJ,QAASC,EAAcxE,SAAUzE,KAAK2G,oBACpI,2BAAOf,QAAQ,uBAAuB7F,UAAU,OAAO+B,aAAQ,qG,GA5BzCnB,IAAMC,WCIpCwI,EACEvI,OAAOC,IAAIC,YADbqI,iCA+DaC,E,kDA1Db,WAAYvJ,GAAQ,IAAD,8BACjB,cAAMA,IAgBRwJ,YAAc,SAACtE,GACTA,EAAEC,OAAO+D,SACX,EAAKpG,SAAS,CACZ2G,gBAAiBvE,EAAEC,OAAOf,SApBb,EAyBnBsF,WAAa,SAACxE,GACZA,EAAEK,iBACF7C,IAAWiH,gCAAgC,EAAK9F,MAAM4F,iBAAiB7G,MAAK,SAACC,GAC3Ef,IAAQmB,QAAQjB,aAAQ,eACvBkB,OAAM,SAACC,GACR,IAAIb,EAAWc,IAAMC,YAAYF,GACjCrB,IAAQC,OAAOO,OA3BjB,EAAKsH,gBAAkB,CACrB,CAACC,SAAU,EAAGjJ,KAAMoB,aAAQ,sBAC5B,CAAC6H,SAAU,KAAMjJ,KAAMoB,aAAQ,aAC/B,CAAC6H,SAAU,MAAOjJ,KAAMoB,aAAQ,gBAChC,CAAC6H,SAAU,MAAOjJ,KAAMoB,aAAQ,YAChC,CAAC6H,SAAU,OAAQjJ,KAAMoB,aAAQ,cAGnC,EAAK6B,MAAQ,CACX4F,gBAAiBH,GAbF,E,qDAmCT,IAAD,OACCG,EAAoBvJ,KAAK2D,MAAzB4F,gBACR,OACE,yBAAKxJ,UAAU,eAAe8F,GAAG,gBAC/B,wBAAI9F,UAAU,wBAAwB+B,aAAQ,uCAC9C,uBAAG/B,UAAU,QAAQ+B,aAAQ,gFAC7B,0BAAMgC,OAAO,OAAOC,OAAO,GAAG8B,GAAG,iCAAiCF,SAAU3F,KAAKwJ,YAC9ExJ,KAAK0J,gBAAgBxJ,KAAI,SAACC,EAAMC,GAC/B,OACE,kBAAC,IAAM8H,SAAP,CAAgB5H,IAAKF,GACnB,2BAAO6D,KAAK,QAAQvC,KAAK,WAAWwC,MAAO/D,EAAKwJ,SAAU5J,UAAU,eAAe8F,GAAE,yBAAoBzF,EAAQ,GAAK4I,QAASO,GAAmBpJ,EAAKwJ,SAAUlF,SAAU,EAAK6E,cAChL,2BAAOvJ,UAAU,wBAAwB6F,QAAO,yBAAoBxF,EAAQ,IAAMD,EAAKO,MACvF,iCAIN,4BAAQuD,KAAK,SAASlE,UAAU,gCAAgC+B,aAAQ,iB,GArDxDnB,IAAMC,W,ECJ5BC,OAAOC,IAAIC,YAFb6I,E,EAAAA,cACAC,E,EAAAA,aA8CaC,E,kDAzCb,WAAYhK,GAAQ,IAAD,8BACjB,cAAMA,IAGRiK,cAAgB,WACd,OACE,kBAAC,IAAM7B,SAAP,KACE,uBAAGnI,UAAU,QAAQ+B,aAAQ,oBAC7B,uBAAG/B,UAAU,+BAA+BS,KAAI,UAAKwD,KAAL,+CAC7ClC,aAAQ,sCACX,uBAAG/B,UAAU,QACV+B,aAAQ,0FACQ,GAAhB+H,EAAoB/H,aAAQ,4CAC3BA,aAAQ,0CAA0CO,QAAQ,QAASwH,IAEvE,uBAAGrJ,KAAI,UAAKwD,KAAL,oDACLjE,UAAU,2BAA2B+B,aAAQ,iBAhBlC,EAqBnBkI,eAAiB,WACf,OACE,kBAAC,IAAM9B,SAAP,KACE,uBAAGnI,UAAU,QAAQ+B,aAAQ,+HAC7B,uBAAGtB,KAAI,UAAKwD,KAAL,4CAAyDjE,UAAU,2BACvE+B,aAAQ,uCA1BE,E,qDAgCjB,OACE,yBAAK/B,UAAU,eAAe8F,GAAG,mBAC/B,wBAAI9F,UAAU,wBAAwB+B,aAAQ,8BAC7C8H,EAAgB5J,KAAK+J,gBAAkB/J,KAAKgK,sB,GArCfrJ,IAAMC,WCoC7BqJ,E,kDA/Bb,WAAYnK,GAAQ,IAAD,8BACjB,cAAMA,IAIRoK,WAAa,WACX,EAAKxG,KAAKrC,QAAQkF,UAJlB,EAAK7C,KAAO/C,IAAM8C,YAFD,E,qDAST,IAAD,EACoCzD,KAAKF,MAAzCqK,EADA,EACAA,cAAelJ,EADf,EACeA,UAAWuG,EAD1B,EAC0BA,OACjC,OACE,kBAAC,IAAD,CAAOC,UAAU,EAAMC,QAAQ,EAAMF,OAAQA,GAC3C,kBAAC,IAAD,CAAaA,OAAQA,GAAS1F,aAAQ,eACtC,kBAAC,IAAD,KACE,2BAAIA,aAAQ,yCACZ,0BAAM8B,IAAK5D,KAAK0D,KAAM3D,UAAU,SAAS+D,OAAO,OAAOC,OAAQoG,GAC7D,2BAAOlG,KAAK,SAASvC,KAAK,sBAAsBwC,MAAOjD,MAG3D,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAQ2G,MAAM,YAAYlD,QAAS8C,GAAS1F,aAAQ,WACpD,kBAAC,IAAD,CAAQ8F,MAAM,UAAUlD,QAAS1E,KAAKkK,YAAapI,aAAQ,qB,GAxB/BlB,a,ECDlCC,OAAOC,IAAIC,YAJbE,E,EAAAA,UACA0H,E,EAAAA,SACAyB,E,EAAAA,gBACAC,E,EAAAA,eAkDaC,E,kDA7Cb,WAAYxK,GAAQ,IAAD,8BACjB,cAAMA,IAMRyK,kBAAoB,SAACvF,GACnBA,EAAEK,iBACF,EAAKzC,SAAS,CACZ4H,qBAAqB,KAVN,EAcnBxC,aAAe,WACb,EAAKpF,SAAS,CACZ4H,qBAAsB,EAAK7G,MAAM6G,uBAdnC,EAAK7G,MAAQ,CACX6G,qBAAqB,GAHN,E,qDAqBjB,OACE,kBAAC,IAAMtC,SAAP,KACE,yBAAKnI,UAAU,eAAe8F,GAAG,eAC/B,wBAAI9F,UAAU,wBAAwB+B,aAAQ,iBAC9C,uBAAG/B,UAAU,QAAoB,SAAZ4I,EAAsB,2BAAQ,eAClDyB,EACC,uBAAG5J,KAAK,IAAIT,UAAU,0BAA0B2E,QAAS1E,KAAKuK,mBAAoBzI,aAAQ,eAC1F,uBAAGtB,KAAI,UAAKwD,KAAL,2CAAgDyG,mBAAmBJ,IAAmBtK,UAAU,2BAA2B+B,aAAQ,aAG7I9B,KAAK2D,MAAM6G,qBACV,kBAAC,IAAD,KACE,kBAAC,EAAD,CACEL,cAAa,UAAKnG,KAAL,8CAAmDyG,mBAAmBJ,IACnFpJ,UAAWA,EACXuG,OAAQxH,KAAKgI,qB,GAtCDrH,IAAMC,WCgCjB8J,E,kDA/Bb,WAAY5K,GAAQ,IAAD,8BACjB,cAAMA,IAIRoK,WAAa,WACX,EAAKxG,KAAKrC,QAAQkF,UAJlB,EAAK7C,KAAO/C,IAAM8C,YAFD,E,qDAST,IAAD,EACoCzD,KAAKF,MAAzCqK,EADA,EACAA,cAAelJ,EADf,EACeA,UAAWuG,EAD1B,EAC0BA,OACjC,OACE,kBAAC,IAAD,CAAOC,UAAU,EAAMC,QAAQ,EAAMF,OAAQA,GAC3C,kBAAC,IAAD,CAAaA,OAAQA,GAAS1F,aAAQ,eACtC,kBAAC,IAAD,KACE,2BAAIA,aAAQ,yCACZ,0BAAM8B,IAAK5D,KAAK0D,KAAM3D,UAAU,SAAS+D,OAAO,OAAOC,OAAQoG,GAC7D,2BAAOlG,KAAK,SAASvC,KAAK,sBAAsBwC,MAAOjD,MAG3D,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAQ2G,MAAM,YAAYlD,QAAS8C,GAAS1F,aAAQ,WACpD,kBAAC,IAAD,CAAQ8F,MAAM,UAAUlD,QAAS1E,KAAKkK,YAAapI,aAAQ,qB,GAxB7BlB,a,ECDpCC,OAAOC,IAAIC,YAJbE,G,EAAAA,UACA0H,G,EAAAA,SACAgC,G,EAAAA,wBACAN,G,EAAAA,eAkDaO,G,kDA7Cb,WAAY9K,GAAQ,IAAD,8BACjB,cAAMA,IAMRyK,kBAAoB,SAACvF,GACnBA,EAAEK,iBACF,EAAKzC,SAAS,CACZ4H,qBAAqB,KAVN,EAcnBxC,aAAe,WACb,EAAKpF,SAAS,CACZ4H,qBAAsB,EAAK7G,MAAM6G,uBAdnC,EAAK7G,MAAQ,CACX6G,qBAAqB,GAHN,E,qDAqBjB,OACE,kBAAC,IAAMtC,SAAP,KACE,yBAAKnI,UAAU,eAAe8F,GAAG,eAC/B,wBAAI9F,UAAU,wBAAwB+B,aAAQ,iBAC9C,uBAAG/B,UAAU,QAAoB,SAAZ4I,GAAsB,eAAM,YAChDgC,GACC,uBAAGnK,KAAK,IAAIT,UAAU,0BAA0B2E,QAAS1E,KAAKuK,mBAAoBzI,aAAQ,eAC1F,uBAAGtB,KAAI,UAAKwD,KAAL,kCAAuCyG,mBAAmBJ,KAAmBtK,UAAU,2BAA2B+B,aAAQ,aAGpI9B,KAAK2D,MAAM6G,qBACV,kBAAC,IAAD,KACE,kBAAC,EAAD,CACEL,cAAa,UAAKnG,KAAL,qCAA0CyG,mBAAmBJ,KAC1EpJ,UAAWA,GACXuG,OAAQxH,KAAKgI,qB,GAtCMrH,IAAMC,WCgCxBiK,G,kDA/Bb,WAAY/K,GAAQ,IAAD,8BACjB,cAAMA,IAIRiE,OAAS,WACP,EAAKL,KAAKrC,QAAQkF,UAJlB,EAAK7C,KAAO/C,IAAM8C,YAFD,E,qDAST,IAAD,EACoCzD,KAAKF,MAAzCqK,EADA,EACAA,cAAelJ,EADf,EACeA,UAAWuG,EAD1B,EAC0BA,OACjC,OACE,kBAAC,IAAD,CAAOC,UAAU,EAAMC,QAAQ,EAAMF,OAAQA,GAC3C,kBAAC,IAAD,CAAaA,OAAQA,GAAS1F,aAAQ,mBACtC,kBAAC,IAAD,KACE,2BAAIA,aAAQ,wCACZ,0BAAM8B,IAAK5D,KAAK0D,KAAM3D,UAAU,SAAS+D,OAAO,OAAOC,OAAQoG,GAC7D,2BAAOlG,KAAK,SAASvC,KAAK,sBAAsBwC,MAAOjD,MAG3D,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAQ2G,MAAM,YAAYlD,QAAS8C,GAAS1F,aAAQ,WACpD,kBAAC,IAAD,CAAQ8F,MAAM,UAAUlD,QAAS1E,KAAK+D,QAASjC,aAAQ,iB,GAxB9BlB,aCLjCK,GACEJ,OAAOC,IAAIC,YADbE,UA+Ca6J,G,kDA1Cb,WAAYhL,GAAQ,IAAD,8BACjB,cAAMA,IAMRiL,cAAgB,SAAC/F,GACfA,EAAEK,iBACF,EAAKzC,SAAS,CACZ4H,qBAAqB,KAVN,EAcnBxC,aAAe,WACb,EAAKpF,SAAS,CACZ4H,qBAAsB,EAAK7G,MAAM6G,uBAdnC,EAAK7G,MAAQ,CACX6G,qBAAqB,GAHN,E,qDAqBjB,OACE,kBAAC,IAAMtC,SAAP,KACE,yBAAKnI,UAAU,eAAe8F,GAAG,eAC/B,wBAAI9F,UAAU,wBAAwB+B,aAAQ,mBAC9C,uBAAG/B,UAAU,QAAQ+B,aAAQ,6DAC7B,4BAAQ/B,UAAU,0BAA0B2E,QAAS1E,KAAK+K,eAAgBjJ,aAAQ,YAEnF9B,KAAK2D,MAAM6G,qBACV,kBAAC,IAAD,KACE,kBAAC,GAAD,CACEL,cAAa,UAAKnG,KAAL,mBACb/C,UAAWA,GACXuG,OAAQxH,KAAKgI,qB,GAnCCrH,IAAMC,W,yBC0B9BC,OAAOC,IAAIC,aARbiK,G,GAAAA,kBAAmBC,G,GAAAA,sBACnBC,G,GAAAA,mBACAC,G,GAAAA,mBACAC,G,GAAAA,kBACAC,G,GAAAA,qBACAC,G,GAAAA,iBACAC,G,GAAAA,eACAC,G,GAAAA,oBAGIC,G,kDAEJ,WAAY3L,GAAQ,IAAD,8BACjB,cAAMA,IA+BRyF,eAAiB,SAACtF,GAChBuC,IAAW+C,eAAetF,GAAMyC,MAAK,SAACC,GACpC,EAAKC,SAAS,CACZ4C,SAAU7C,EAAI1C,OAEhB2B,IAAQmB,QAAQjB,aAAQ,eACvBkB,OAAM,SAACC,GACR,IAAIoD,EAAanD,IAAMC,YAAYF,GACnCrB,IAAQC,OAAOwE,OAxCA,EA4CnBqF,gBAAkB,SAAClD,GACjB,IAA4B,IAAxBA,EAAamD,OAAiB,CAChC,IAAIC,EAAM5H,KAAW,WAAawE,EAAaqD,QAAU,IAAMrD,EAAasD,UAAYtD,EAAauD,KACrGC,YAASJ,EAAK,CAACK,SAAS,QACnB,CACL,IAAIL,EAAM5H,KAAW,OAASwE,EAAaqD,QAAU,QAAU3I,IAAMgJ,WAAW1D,EAAauD,MAC7ElL,OAAOsL,KAAK,eAClB1D,SAASjI,KAAOoL,IAnDX,EAuDnBQ,oBAAsB,SAACpH,GACrB,IAAMqH,EAAYrH,EAAEC,OAAOoH,UACrBC,EAAW,EAAKC,aAAaC,QAAO,SAACrM,EAAMC,GAC/C,OAAOD,EAAKE,MAAQoM,SAASC,eAAevM,EAAKK,KAAKC,OAAO,IAAIkM,UAAY,GAAKN,KAEhFC,EAAS/K,QACX,EAAKqB,SAAS,CACZrC,UAAW+L,EAASA,EAAS/K,OAAQ,GAAGf,KAAKC,OAAO,MA5DxD,EAAK8L,aAAe,CAClB,CAAClM,MAAM,EAAMG,KAAM,mBAAoBE,KAAMoB,aAAQ,YACrD,CAACzB,KAAM2K,GAAmBxK,KAAM,sBAAuBE,KAAMoB,aAAQ,aACrE,CAACzB,KAAM6K,GAAoB1K,KAAM,kBAAmBE,KAAMoB,aAAQ,uBAClE,CAACzB,KAAM8K,GAAoB3K,KAAM,wBAAyBE,KAAMoB,aAAQ,oBACxE,CAACzB,KAAM+K,GAAmB5K,KAAM,wBAAyBE,KAAMoB,aAAQ,wBACvE,CAACzB,MAAM,EAAMG,KAAM,gBAAiBE,KAAMoB,aAAQ,aAClD,CAACzB,KAAMuM,KAAOpM,KAAM,gBAAiBE,KAAMoB,aAAQ,uBACnD,CAACzB,KAAMgL,GAAsB7K,KAAM,mBAAoBE,KAAMoB,aAAQ,8BACrE,CAACzB,KAAMiL,GAAkB9K,KAAM,eAAgBE,KAAMoB,aAAQ,iBAC7D,CAACzB,KAAMkL,GAAgB/K,KAAM,eAAgBE,KAAMoB,aAAQ,iBAC3D,CAACzB,KAAMmL,GAAqBhL,KAAM,eAAgBE,KAAMoB,aAAQ,oBAGlE,EAAK6B,MAAQ,CACXpD,UAAW,EAAKgM,aAAa,GAAG/L,KAAKC,OAAO,IAjB7B,E,gEAqBE,IAAD,OAClB+B,IAAWqK,cAAcnK,MAAK,SAACC,GAC7B,EAAKC,SAAS,CACZ4C,SAAU7C,EAAI1C,UAEf+C,OAAM,SAAAC,GACP,IAAIoD,EAAanD,IAAMC,YAAYF,GACnCrB,IAAQC,OAAOwE,Q,+BAwCjB,OACE,kBAAC,IAAM6B,SAAP,KACE,yBAAKnI,UAAU,4BACb,yBAAKA,UAAU,6CACb,uBAAGS,KAAMwD,MACP,yBAAKK,IAAKyI,KAAWC,KAAUxI,OAAQyI,KAAY1I,MAAO2I,KAAWC,MAAOC,KAAW3I,IAAI,UAE7F,kBAAC,IAAD,CAAekH,gBAAiB1L,KAAK0L,mBAEvC,yBAAK3L,UAAU,6BACb,yBAAKA,UAAU,qBACb,kBAAC,EAAD,CAASE,KAAMD,KAAKuM,aAAchM,UAAWP,KAAK2D,MAAMpD,aAE1D,yBAAKR,UAAU,iCACb,wBAAIA,UAAU,WAAW+B,aAAQ,aACjC,yBAAK/B,UAAU,4BAA4BqN,SAAUpN,KAAKoM,qBACxD,yBAAKvG,GAAG,kBAAkB9F,UAAU,gBAClC,wBAAIA,UAAU,wBAAwB+B,aAAQ,oBAC9C,kBAAC,EAAD,MACC9B,KAAK2D,MAAM6B,UAAY,kBAAC,EAAD,CAAmBA,SAAUxF,KAAK2D,MAAM6B,SAAUD,eAAgBvF,KAAKuF,kBAEhGyF,IACD,yBAAKnF,GAAG,qBAAqB9F,UAAU,gBACrC,wBAAIA,UAAU,wBAAwB+B,aAAQ,aAC9C,uBAAGtB,KAAI,UAAKwD,KAAL,6BAA0CjE,UAAU,2BAA2BkL,KAIvFC,IAAsB,kBAAC,EAAD,MACtBC,IAAsB,kBAAC,EAAD,MACtBC,IAAqBpL,KAAK2D,MAAM6B,UAC/B,kBAAC,EAAD,CAAmBA,SAAUxF,KAAK2D,MAAM6B,SAAUD,eAAgBvF,KAAKuF,iBACzE,kBAAC,EAAD,MACCqH,MAAS,kBAAC,EAAD,MACTvB,IAAwB,kBAAC,EAAD,MACxBC,IAAoB,kBAAC,EAAD,MACpBC,IAAkB,kBAAC,GAAD,MAClBC,IAAuB,kBAAC,GAAD,e,GA3GjB7K,IAAMC,WAqH7ByM,IAASC,OACP,kBAAC,GAAD,MACAb,SAASC,eAAe,c","file":"static/js/settings.chunk.js","sourcesContent":["import React from 'react';\n\nclass SideNav extends React.Component {\n\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return (\n      <ul className=\"nav flex-column user-setting-nav\">\n        {this.props.data.map((item, index) => {\n          return item.show ?\n            <li key={index} className={`nav-item ${this.props.curItemID == item.href.substr(1) && 'active'}`}><a className=\"nav-link\" href={item.href}>{item.text}</a></li> : null;\n        })}\n      </ul>\n    );\n  }\n}\n\nexport default SideNav;\n","import React from 'react';\nimport { gettext, siteRoot } from '../../utils/constants';\nimport { seafileAPI } from '../../utils/seafile-api';\nimport toaster from '../toast';\nimport { Utils } from '../../utils/utils';\n\nconst { avatarURL, csrfToken } = window.app.pageOptions;\n\nclass UserAvatarForm extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.fileInput = React.createRef();\n    this.form = React.createRef();\n    this.state = {\n      avatarSrc: avatarURL,\n      isEditShown: false\n    };\n  }\n\n  fileInputChange = () => {\n\n    // no file selected\n    if (!this.fileInput.current.files.length) {\n      return;\n    }\n\n    const file = this.fileInput.current.files[0];\n    const fileName = file.name;\n\n    // no file extension\n    if (fileName.lastIndexOf('.') == -1) {\n      toaster.danger(gettext('Please choose an image file.'), {\n        duration: 5\n      });\n      return false;\n    }\n\n    const fileExt = fileName.substr((fileName.lastIndexOf('.') + 1)).toLowerCase();\n    const allowedExt = ['jpg','jpeg', 'png', 'gif'];\n    if (allowedExt.indexOf(fileExt) == -1) {\n      const errorMsg = gettext('File extensions can only be {placeholder}.')\n        .replace('{placeholder}', allowedExt.join(', '));\n      toaster.danger(errorMsg, {duration: 5});\n      return false;\n    }\n\n    // file size should be less than 1MB\n    if (file.size > 1024*1024) {\n      const errorMsg = gettext('The file is too large. Allowed maximum size is 1MB.');\n      toaster.danger(errorMsg, {duration: 5});\n      return false;\n    }\n\n    //this.form.current.submit();\n    seafileAPI.updateUserAvatar(file, 160).then((res) => {\n      this.setState({\n        avatarSrc: res.data.avatar_url\n      });\n      toaster.success(gettext('Success'));\n    }).catch((error) => {\n      let errorMsg = Utils.getErrorMsg(error);\n      toaster.danger(errorMsg);\n    });\n  }\n\n  openFileInput = () => {\n    this.fileInput.current.click();\n  }\n\n  handleMouseOver = () => {\n    this.setState({\n      isEditShown: true\n    });\n  }\n\n  handleMouseOut = () => {\n    this.setState({\n      isEditShown: false\n    });\n  }\n\n  render() {\n    return (\n      <form ref={this.form} className=\"form-group row\" encType=\"multipart/form-data\" method=\"post\" action={`${siteRoot}avatar/add/`}>\n        <input type=\"hidden\" name=\"csrfmiddlewaretoken\" value={csrfToken} />\n        <label className=\"col-sm-1 col-form-label\">{gettext('Avatar:')}</label>\n        <div className=\"col-auto position-relative\" onMouseOver={this.handleMouseOver} onMouseOut={this.handleMouseOut}>\n          <img src={this.state.avatarSrc} width=\"80\" height=\"80\" alt=\"\" className=\"user-avatar\" />\n          <input type=\"file\" name=\"avatar\" className=\"d-none\" onChange={this.fileInputChange} ref={this.fileInput} />\n          <span className={`avatar-edit fas fa-edit ${!this.state.isEditShown && 'd-none'}`} onClick={this.openFileInput}></span>\n        </div>\n      </form>\n    );\n  }\n}\n\nexport default UserAvatarForm;\n","import React from 'react';\nimport { gettext } from '../../utils/constants';\n\nconst {\n  nameLabel,\n  enableUpdateUserInfo,\n  enableUserSetContactEmail\n} = window.app.pageOptions;\n\nclass UserBasicInfoForm extends React.Component {\n\n  constructor(props) {\n    super(props);\n    const {\n      contact_email,\n      login_id,\n      name\n    } = this.props.userInfo;\n    this.state = {\n      contactEmail: contact_email,\n      loginID: login_id,\n      name: name\n    };\n  }\n\n  handleNameInputChange = (e) => {\n    this.setState({\n      name: e.target.value\n    });\n  }\n\n  handleContactEmailInputChange = (e) => {\n    this.setState({\n      contactEmail: e.target.value\n    });\n  }\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    let data = {\n      name: this.state.name\n    };\n    if (enableUserSetContactEmail) {\n      data.contact_email = this.state.contactEmail;\n    }\n    this.props.updateUserInfo(data);\n  }\n\n  render() {\n    const {\n      contactEmail,\n      loginID,\n      name\n    } = this.state;\n\n    return (\n      <form action=\"\" method=\"post\" onSubmit={this.handleSubmit}>\n\n        <div className=\"form-group row\">\n          <label className=\"col-sm-1 col-form-label\" htmlFor=\"name\">{nameLabel}</label>\n          <div className=\"col-sm-5\">\n            <input className=\"form-control\" id=\"name\" type=\"text\" name=\"nickname\" value={name} disabled={!enableUpdateUserInfo} onChange={this.handleNameInputChange} />\n          </div>\n        </div>\n\n        {loginID && (\n          <div className=\"form-group row\">\n            <label className=\"col-sm-1 col-form-label\" htmlFor=\"user-name\">{gettext('Username:')}</label>\n            <div className=\"col-sm-5\">\n              <input className=\"form-control\" id=\"user-name\" type=\"text\" name=\"username\" value={loginID} disabled={true} readOnly={true} />\n            </div>\n            <p className=\"col-sm-5 m-0 input-tip\">{gettext('You can use this field at login.')}</p>\n          </div>\n        )}\n\n        {(contactEmail || enableUserSetContactEmail) && (\n          <div className=\"form-group row\">\n            <label className=\"col-sm-1 col-form-label\" htmlFor=\"contact-email\">{gettext('Contact Email:')}</label>\n            <div className=\"col-sm-5\">\n              <input className=\"form-control\" id=\"contact-email\" type=\"text\" name=\"contact_email\" value={contactEmail} disabled={!enableUserSetContactEmail} readOnly={!enableUserSetContactEmail} onChange={this.handleContactEmailInputChange} />\n            </div>\n            <p className=\"col-sm-5 m-0 input-tip\">{gettext('Your notifications will be sent to this email.')}</p>\n          </div>\n        )}\n\n        <button type=\"submit\" className=\"btn btn-outline-primary offset-sm-1\" disabled={!enableUpdateUserInfo}>{gettext('Submit')}</button>\n      </form>\n    );\n  }\n}\n\nexport default UserBasicInfoForm;\n","import React from 'react';\nimport { gettext } from '../../utils/constants';\nimport { seafileAPI } from '../../utils/seafile-api';\nimport { Utils } from '../../utils/utils';\nimport toaster from '../toast';\n\nclass WebAPIAuthToken extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      authToken: '******'\n    };\n  }\n\n  getAuthToken = () => {\n    seafileAPI.getAuthTokenBySession().then((res) => {\n      this.setState({\n        authToken: res.data.token\n      });\n    }).catch((error) => {\n      let errMessage = Utils.getErrorMsg(error);\n      toaster.danger(errMessage);\n    });\n  }\n\n  render() {\n    const { authToken } = this.state;\n    return (\n      <div id=\"get-auth-token\" className=\"setting-item\">\n        <h3 className=\"setting-item-heading\">{gettext('Web API Auth Token')}</h3>\n        <div className=\"d-flex align-items-center\">\n          <input type=\"text\" readOnly={true} value={authToken} className=\"form-control mr-2 col-sm-5\" />\n          <button className=\"btn btn-outline-primary\" onClick={this.getAuthToken}>{gettext('Get')}</button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default WebAPIAuthToken;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Modal, ModalHeader, ModalBody, ModalFooter, Button, Input, InputGroup, InputGroupAddon } from 'reactstrap';\nimport { gettext } from '../../utils/constants';\n\nconst propTypes = {\n  password: PropTypes.string.isRequired,\n  updatePassword: PropTypes.func.isRequired,\n  toggle: PropTypes.func.isRequired\n};\n\nclass UpdateWebdavPassword extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      password: this.props.password,\n      isPasswordVisible: false,\n      btnDisabled: false\n    };\n  }\n\n  submit = () => {\n    this.setState({\n      btnDisabled: true\n    });\n    this.props.updatePassword(this.state.password);\n  }\n\n  handleInputChange = (e) => {\n    let passwd = e.target.value.trim();\n    this.setState({password: passwd});\n  }\n\n  togglePasswordVisible = () => {\n    this.setState({\n      isPasswordVisible: !this.state.isPasswordVisible\n    });\n  }\n\n  generatePassword = () => {\n    let randomPassword = '';\n    const possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n    for (let i = 0; i < 8; i++) {\n      randomPassword += possible.charAt(Math.floor(Math.random() * possible.length));\n    }\n    this.setState({\n      password: randomPassword,\n      isPasswordVisible: true\n    });\n  }\n\n  render() {\n    const { toggle } = this.props;\n    return (\n      <Modal centered={true} isOpen={true} toggle={toggle}>\n        <ModalHeader toggle={toggle}>{gettext('WebDav Password')}</ModalHeader>\n        <ModalBody>\n          <InputGroup className=\"\">\n            <Input type={this.state.isPasswordVisible ? 'text' : 'password'} value={this.state.password} onChange={this.handleInputChange} />\n            <InputGroupAddon addonType=\"append\">\n              <Button onClick={this.togglePasswordVisible}><i className={`fas ${this.state.isPasswordVisible ? 'fa-eye': 'fa-eye-slash'}`}></i></Button>\n              <Button onClick={this.generatePassword}><i className=\"fas fa-magic\"></i></Button>\n            </InputGroupAddon>\n          </InputGroup>\n        </ModalBody>\n        <ModalFooter>\n          <Button color=\"secondary\" onClick={toggle}>{gettext('Cancel')}</Button>\n          <Button color=\"primary\" onClick={this.submit} disabled={this.state.btnDisabled}>{gettext('Submit')}</Button>\n        </ModalFooter>\n      </Modal>\n    );\n  }\n}\n\nUpdateWebdavPassword.propTypes = propTypes;\n\nexport default UpdateWebdavPassword;\n","import React from 'react';\nimport ModalPortal from '../modal-portal';\nimport { gettext } from '../../utils/constants';\nimport { seafileAPI } from '../../utils/seafile-api';\nimport { Utils } from '../../utils/utils';\nimport toaster from '../toast';\nimport UpdateWebdavPassword from '../dialog/update-webdav-password';\n\nconst { webdavPasswd } = window.app.pageOptions;\n\nclass WebdavPassword extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      password: webdavPasswd,\n      isPasswordVisible: false,\n      isDialogOpen: false\n    };\n  }\n\n  togglePasswordVisible = () => {\n    this.setState({\n      isPasswordVisible: !this.state.isPasswordVisible\n    });\n  }\n\n  updatePassword = (password) => {\n    seafileAPI.updateWebdavSecret(password).then((res) => {\n      this.toggleDialog();\n      this.setState({\n        password: password\n      });\n      toaster.success(gettext('Success'));\n    }).catch((error) => {\n      let errorMsg = Utils.getErrorMsg(error);\n      this.toggleDialog();\n      toaster.danger(errorMsg);\n    });\n  }\n\n  toggleDialog = () => {\n    this.setState({\n      isDialogOpen: !this.state.isDialogOpen\n    });\n  }\n\n  render() {\n    const { password, isPasswordVisible } = this.state;\n    return (\n      <React.Fragment>\n        <div id=\"update-webdav-passwd\" className=\"setting-item\">\n          <h3 className=\"setting-item-heading\">{gettext('WebDav Password')}</h3>\n          {password ? (\n            <React.Fragment>\n              <div className=\"d-flex align-items-center\">\n                <label className=\"m-0 mr-2\">{gettext('Password:')}</label>\n                <input className=\"border-0 mr-1\" type=\"text\" value={isPasswordVisible ? password : '**********'} readOnly={true} size={Math.max(password.length, 10)} />\n                <span onClick={this.togglePasswordVisible} className={`eye-icon fas ${this.state.isPasswordVisible ? 'fa-eye': 'fa-eye-slash'}`}></span>\n              </div>\n              <button className=\"btn btn-outline-primary mt-2\" onClick={this.toggleDialog}>{gettext('Update')}</button>\n            </React.Fragment>\n          ) : (\n            <button className=\"btn btn-outline-primary\" onClick={this.toggleDialog}>{gettext('Set Password')}</button>\n          )}\n        </div>\n        {this.state.isDialogOpen && (\n          <ModalPortal>\n            <UpdateWebdavPassword\n              password={this.state.password}\n              updatePassword={this.updatePassword}\n              toggle={this.toggleDialog}\n            />\n          </ModalPortal>\n        )}\n      </React.Fragment>\n    );\n  }\n}\n\nexport default WebdavPassword;\n","import React from 'react';\nimport Select from 'react-select';\nimport { gettext, siteRoot } from '../../utils/constants';\n\nconst {\n  currentLang, langList\n} = window.app.pageOptions;\n\nclass LanguageSetting extends React.Component {\n\n  constructor(props) {\n    super(props);\n  }\n\n  onSelectChange = (selectedItem) => {\n    // selectedItem: {value: '...', label: '...'}\n    location.href = `${siteRoot}i18n/?lang=${selectedItem.value}`;\n  }\n\n  render() {\n    const options = langList.map((item, index) => {\n      return {\n        value: item.langCode,\n        label: item.langName\n      };\n    });\n\n    return (\n      <div className=\"setting-item\" id=\"lang-setting\">\n        <h3 className=\"setting-item-heading\">{gettext('Language Setting')}</h3>\n        <Select\n          className='language-selector'\n          defaultValue={{value: currentLang.langCode, label: currentLang.langName}}\n          options={options}\n          onChange={this.onSelectChange}\n        />\n      </div>\n    );\n  }\n}\n\nexport default LanguageSetting;\n","import React from 'react';\nimport { gettext } from '../../utils/constants';\n\nclass ListInAddressBook extends React.Component {\n\n  constructor(props) {\n    super(props);\n    const { list_in_address_book } = this.props.userInfo;\n    this.state = {\n      inputChecked: list_in_address_book\n    };\n  }\n\n  handleInputChange = (e) => {\n    const checked = e.target.checked;\n    this.setState({\n      inputChecked: checked\n    });\n    this.props.updateUserInfo({\n      list_in_address_book: checked.toString()\n    });\n  }\n\n  render() {\n    const { inputChecked } = this.state;\n\n    return (\n      <div className=\"setting-item\" id=\"list-in-address-book\">\n        <h3 className=\"setting-item-heading\">{gettext('Global Address Book')}</h3>\n        <div className=\"d-flex align-items-center\">\n          <input type=\"checkbox\" id=\"list-in-address-book\" name=\"list_in_address_book\" className=\"mr-1\" checked={inputChecked} onChange={this.handleInputChange} />\n          <label htmlFor=\"list-in-address-book\" className=\"m-0\">{gettext('List your account in global address book, so that others can find you by typing your name.')}</label>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ListInAddressBook;\n","import React from 'react';\nimport { gettext } from '../../utils/constants';\nimport { seafileAPI } from '../../utils/seafile-api';\nimport { Utils } from '../../utils/utils';\nimport toaster from '../toast';\n\nconst {\n  initialEmailNotificationInterval\n} = window.app.pageOptions;\n\nclass EmailNotice extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    // interval: in seconds\n    this.intervalOptions = [\n      {interval: 0, text: gettext('Don\\'t send emails')},\n      {interval: 3600, text: gettext('Per hour')},\n      {interval: 14400, text: gettext('Per 4 hours')},\n      {interval: 86400, text: gettext('Per day')},\n      {interval: 604800, text: gettext('Per week')}\n    ];\n\n    this.state = {\n      currentInterval: initialEmailNotificationInterval\n    };\n  }\n\n  inputChange = (e) => {\n    if (e.target.checked) {\n      this.setState({\n        currentInterval: e.target.value\n      });\n    }\n  }\n\n  formSubmit = (e) => {\n    e.preventDefault();\n    seafileAPI.updateEmailNotificationInterval(this.state.currentInterval).then((res) => {\n      toaster.success(gettext('Success'));\n    }).catch((error) => {\n      let errorMsg = Utils.getErrorMsg(error);\n      toaster.danger(errorMsg);\n    });\n  }\n\n  render() {\n    const { currentInterval } = this.state;\n    return (\n      <div className=\"setting-item\" id=\"email-notice\">\n        <h3 className=\"setting-item-heading\">{gettext('Email Notification of File Changes')}</h3>\n        <p className=\"mb-1\">{gettext('The list of added, deleted and modified files will be sent to your mailbox.')}</p>\n        <form method=\"post\" action=\"\" id=\"set-email-notice-interval-form\" onSubmit={this.formSubmit}>\n          {this.intervalOptions.map((item, index) => {\n            return (\n              <React.Fragment key={index}>\n                <input type=\"radio\" name=\"interval\" value={item.interval} className=\"align-middle\" id={`interval-option${index + 1}`} checked={currentInterval == item.interval} onChange={this.inputChange} />\n                <label className=\"align-middle m-0 ml-2\" htmlFor={`interval-option${index + 1}`}>{item.text}</label>\n                <br />\n              </React.Fragment>\n            );\n          })}\n          <button type=\"submit\" className=\"btn btn-outline-primary mt-2\">{gettext('Submit')}</button>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default EmailNotice;\n","import React from 'react';\nimport { gettext, siteRoot } from '../../utils/constants';\n\nconst {\n  defaultDevice,\n  backupTokens\n} = window.app.pageOptions;\n\nclass TwoFactorAuthentication extends React.Component {\n\n  constructor(props) {\n    super(props);\n  }\n\n  renderEnabled = () => {\n    return (\n      <React.Fragment>\n        <p className=\"mb-2\">{gettext('Status: enabled')}</p>\n        <a className=\"btn btn-outline-primary mb-4\" href={`${siteRoot}profile/two_factor_authentication/disable/`}>\n          {gettext('Disable Two-Factor Authentication')}</a>\n        <p className=\"mb-2\">\n          {gettext('If you don\\'t have any device with you, you can access your account using backup codes.')}\n          {backupTokens == 1 ? gettext('You have only one backup code remaining.') :\n            gettext('You have {num} backup codes remaining.').replace('{num}', backupTokens)}\n        </p>\n        <a href={`${siteRoot}profile/two_factor_authentication/backup/tokens/`}\n          className=\"btn btn-outline-primary\">{gettext('Show Codes')}</a>\n      </React.Fragment>\n    );\n  }\n\n  renderDisabled = () => {\n    return (\n      <React.Fragment>\n        <p className=\"mb-2\">{gettext('Two-factor authentication is not enabled for your account. Enable two-factor authentication for enhanced account security.')}</p>\n        <a href={`${siteRoot}profile/two_factor_authentication/setup/`} className=\"btn btn-outline-primary\">\n          {gettext('Enable Two-Factor Authentication')}</a>\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <div className=\"setting-item\" id=\"two-factor-auth\">\n        <h3 className=\"setting-item-heading\">{gettext('Two-Factor Authentication')}</h3>\n        {defaultDevice ? this.renderEnabled() : this.renderDisabled()}\n      </div>\n    );\n  }\n}\n\nexport default TwoFactorAuthentication;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Modal, ModalHeader, ModalBody, ModalFooter, Button } from 'reactstrap';\nimport { gettext } from '../../utils/constants';\n\nconst propTypes = {\n  formActionURL: PropTypes.string.isRequired,\n  csrfToken: PropTypes.string.isRequired,\n  toggle: PropTypes.func.isRequired\n};\n\nclass ConfirmDisconnectWechat extends Component {\n\n  constructor(props) {\n    super(props);\n    this.form = React.createRef();\n  }\n\n  disconnect = () => {\n    this.form.current.submit();\n  }\n\n  render() {\n    const {formActionURL, csrfToken, toggle} = this.props;\n    return (\n      <Modal centered={true} isOpen={true} toggle={toggle}>\n        <ModalHeader toggle={toggle}>{gettext('Disconnect')}</ModalHeader>\n        <ModalBody>\n          <p>{gettext('Are you sure you want to disconnect?')}</p>\n          <form ref={this.form} className=\"d-none\" method=\"post\" action={formActionURL}>\n            <input type=\"hidden\" name=\"csrfmiddlewaretoken\" value={csrfToken} />\n          </form>\n        </ModalBody>\n        <ModalFooter>\n          <Button color=\"secondary\" onClick={toggle}>{gettext('Cancel')}</Button>\n          <Button color=\"primary\" onClick={this.disconnect}>{gettext('Disconnect')}</Button>\n        </ModalFooter>\n      </Modal>\n    );\n  }\n}\n\nConfirmDisconnectWechat.propTypes = propTypes;\n\nexport default ConfirmDisconnectWechat;\n","import React from 'react';\nimport { gettext, siteRoot } from '../../utils/constants';\nimport ModalPortal from '../modal-portal';\nimport ConfirmDisconnectWechat from '../dialog/confirm-disconnect-wechat';\n\nconst {\n  csrfToken,\n  langCode,\n  socialConnected,\n  socialNextPage\n} = window.app.pageOptions;\n\nclass SocialLogin extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      isConfirmDialogOpen: false\n    };\n  }\n\n  confirmDisconnect = (e) => {\n    e.preventDefault();\n    this.setState({\n      isConfirmDialogOpen: true\n    });\n  }\n\n  toggleDialog = () => {\n    this.setState({\n      isConfirmDialogOpen: !this.state.isConfirmDialogOpen\n    });\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <div className=\"setting-item\" id=\"social-auth\">\n          <h3 className=\"setting-item-heading\">{gettext('Social Login')}</h3>\n          <p className=\"mb-2\">{langCode == 'zh-cn' ? '企业微信': 'WeChat Work'}</p>\n          {socialConnected ?\n            <a href=\"#\" className=\"btn btn-outline-primary\" onClick={this.confirmDisconnect}>{gettext('Disconnect')}</a> :\n            <a href={`${siteRoot}work-weixin/oauth-connect/?next=${encodeURIComponent(socialNextPage)}`} className=\"btn btn-outline-primary\">{gettext('Connect')}</a>\n          }\n        </div>\n        {this.state.isConfirmDialogOpen && (\n          <ModalPortal>\n            <ConfirmDisconnectWechat\n              formActionURL={`${siteRoot}work-weixin/oauth-disconnect/?next=${encodeURIComponent(socialNextPage)}`}\n              csrfToken={csrfToken}\n              toggle={this.toggleDialog}\n            />\n          </ModalPortal>\n        )}\n      </React.Fragment>\n    );\n  }\n}\n\nexport default SocialLogin;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Modal, ModalHeader, ModalBody, ModalFooter, Button } from 'reactstrap';\nimport { gettext } from '../../utils/constants';\n\nconst propTypes = {\n  formActionURL: PropTypes.string.isRequired,\n  csrfToken: PropTypes.string.isRequired,\n  toggle: PropTypes.func.isRequired\n};\n\nclass ConfirmDisconnectDingtalk extends Component {\n\n  constructor(props) {\n    super(props);\n    this.form = React.createRef();\n  }\n\n  disconnect = () => {\n    this.form.current.submit();\n  }\n\n  render() {\n    const {formActionURL, csrfToken, toggle} = this.props;\n    return (\n      <Modal centered={true} isOpen={true} toggle={toggle}>\n        <ModalHeader toggle={toggle}>{gettext('Disconnect')}</ModalHeader>\n        <ModalBody>\n          <p>{gettext('Are you sure you want to disconnect?')}</p>\n          <form ref={this.form} className=\"d-none\" method=\"post\" action={formActionURL}>\n            <input type=\"hidden\" name=\"csrfmiddlewaretoken\" value={csrfToken} />\n          </form>\n        </ModalBody>\n        <ModalFooter>\n          <Button color=\"secondary\" onClick={toggle}>{gettext('Cancel')}</Button>\n          <Button color=\"primary\" onClick={this.disconnect}>{gettext('Disconnect')}</Button>\n        </ModalFooter>\n      </Modal>\n    );\n  }\n}\n\nConfirmDisconnectDingtalk.propTypes = propTypes;\n\nexport default ConfirmDisconnectDingtalk;\n","import React from 'react';\nimport { gettext, siteRoot } from '../../utils/constants';\nimport ModalPortal from '../modal-portal';\nimport ConfirmDisconnectDingtalk from '../dialog/confirm-disconnect-dingtalk';\n\nconst {\n  csrfToken,\n  langCode,\n  socialConnectedDingtalk,\n  socialNextPage\n} = window.app.pageOptions;\n\nclass SocialLoginDintalk extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      isConfirmDialogOpen: false\n    };\n  }\n\n  confirmDisconnect = (e) => {\n    e.preventDefault();\n    this.setState({\n      isConfirmDialogOpen: true\n    });\n  }\n\n  toggleDialog = () => {\n    this.setState({\n      isConfirmDialogOpen: !this.state.isConfirmDialogOpen\n    });\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <div className=\"setting-item\" id=\"social-auth\">\n          <h3 className=\"setting-item-heading\">{gettext('Social Login')}</h3>\n          <p className=\"mb-2\">{langCode == 'zh-cn' ? '钉钉': 'Dingtalk'}</p>\n          {socialConnectedDingtalk ?\n            <a href=\"#\" className=\"btn btn-outline-primary\" onClick={this.confirmDisconnect}>{gettext('Disconnect')}</a> :\n            <a href={`${siteRoot}dingtalk/connect/?next=${encodeURIComponent(socialNextPage)}`} className=\"btn btn-outline-primary\">{gettext('Connect')}</a>\n          }\n        </div>\n        {this.state.isConfirmDialogOpen && (\n          <ModalPortal>\n            <ConfirmDisconnectDingtalk\n              formActionURL={`${siteRoot}dingtalk/disconnect/?next=${encodeURIComponent(socialNextPage)}`}\n              csrfToken={csrfToken}\n              toggle={this.toggleDialog}\n            />\n          </ModalPortal>\n        )}\n      </React.Fragment>\n    );\n  }\n}\n\nexport default SocialLoginDintalk;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Modal, ModalHeader, ModalBody, ModalFooter, Button } from 'reactstrap';\nimport { gettext } from '../../utils/constants';\n\nconst propTypes = {\n  formActionURL: PropTypes.string.isRequired,\n  csrfToken: PropTypes.string.isRequired,\n  toggle: PropTypes.func.isRequired\n};\n\nclass ConfirmDeleteAccount extends Component {\n\n  constructor(props) {\n    super(props);\n    this.form = React.createRef();\n  }\n\n  action = () => {\n    this.form.current.submit();\n  }\n\n  render() {\n    const {formActionURL, csrfToken, toggle} = this.props;\n    return (\n      <Modal centered={true} isOpen={true} toggle={toggle}>\n        <ModalHeader toggle={toggle}>{gettext('Delete Account')}</ModalHeader>\n        <ModalBody>\n          <p>{gettext('Really want to delete your account?')}</p>\n          <form ref={this.form} className=\"d-none\" method=\"post\" action={formActionURL}>\n            <input type=\"hidden\" name=\"csrfmiddlewaretoken\" value={csrfToken} />\n          </form>\n        </ModalBody>\n        <ModalFooter>\n          <Button color=\"secondary\" onClick={toggle}>{gettext('Cancel')}</Button>\n          <Button color=\"primary\" onClick={this.action}>{gettext('Delete')}</Button>\n        </ModalFooter>\n      </Modal>\n    );\n  }\n}\n\nConfirmDeleteAccount.propTypes = propTypes;\n\nexport default ConfirmDeleteAccount;\n","import React from 'react';\nimport { gettext, siteRoot } from '../../utils/constants';\nimport ModalPortal from '../modal-portal';\nimport ConfirmDeleteAccount from '../dialog/confirm-delete-account';\n\nconst {\n  csrfToken\n} = window.app.pageOptions;\n\nclass DeleteAccount extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      isConfirmDialogOpen: false\n    };\n  }\n\n  confirmDelete = (e) => {\n    e.preventDefault();\n    this.setState({\n      isConfirmDialogOpen: true\n    });\n  }\n\n  toggleDialog = () => {\n    this.setState({\n      isConfirmDialogOpen: !this.state.isConfirmDialogOpen\n    });\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <div className=\"setting-item\" id=\"del-account\">\n          <h3 className=\"setting-item-heading\">{gettext('Delete Account')}</h3>\n          <p className=\"mb-2\">{gettext('This operation will not be reverted. Please think twice!')}</p>\n          <button className=\"btn btn-outline-primary\" onClick={this.confirmDelete}>{gettext('Delete')}</button>\n        </div>\n        {this.state.isConfirmDialogOpen && (\n          <ModalPortal>\n            <ConfirmDeleteAccount\n              formActionURL={`${siteRoot}profile/delete/`}\n              csrfToken={csrfToken}\n              toggle={this.toggleDialog}\n            />\n          </ModalPortal>\n        )}\n      </React.Fragment>\n    );\n  }\n}\n\nexport default DeleteAccount;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { navigate } from '@reach/router';\nimport { Utils } from './utils/utils';\nimport { isPro, gettext, siteRoot, mediaUrl, logoPath, logoWidth, logoHeight, siteTitle } from './utils/constants';\nimport { seafileAPI } from './utils/seafile-api';\nimport toaster from './components/toast';\nimport CommonToolbar from './components/toolbar/common-toolbar';\nimport SideNav from './components/user-settings/side-nav';\nimport UserAvatarForm from './components/user-settings/user-avatar-form';\nimport UserBasicInfoForm from './components/user-settings/user-basic-info-form';\nimport WebAPIAuthToken from './components/user-settings/web-api-auth-token';\nimport WebdavPassword from './components/user-settings/webdav-password';\nimport LanguageSetting from './components/user-settings/language-setting';\nimport ListInAddressBook from './components/user-settings/list-in-address-book';\nimport EmailNotice from './components/user-settings/email-notice';\nimport TwoFactorAuthentication from './components/user-settings/two-factor-auth';\nimport SocialLogin from './components/user-settings/social-login';\nimport SocialLoginDingtalk from './components/user-settings/social-login-dingtalk';\nimport DeleteAccount from './components/user-settings/delete-account';\n\nimport './css/toolbar.css';\nimport './css/search.css';\n\nimport './css/user-settings.css';\n\nconst {\n  canUpdatePassword, passwordOperationText,\n  enableGetAuthToken,\n  enableWebdavSecret,\n  enableAddressBook,\n  twoFactorAuthEnabled,\n  enableWechatWork,\n  enableDingtalk,\n  enableDeleteAccount\n} = window.app.pageOptions;\n\nclass Settings extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.sideNavItems = [\n      {show: true, href: '#user-basic-info', text: gettext('Profile')},\n      {show: canUpdatePassword, href: '#update-user-passwd', text: gettext('Password')},\n      {show: enableGetAuthToken, href: '#get-auth-token', text: gettext('Web API Auth Token')},\n      {show: enableWebdavSecret, href: '#update-webdav-passwd', text: gettext('WebDav Password')},\n      {show: enableAddressBook, href: '#list-in-address-book', text: gettext('Global Address Book')},\n      {show: true, href: '#lang-setting', text: gettext('Language')},\n      {show: isPro, href: '#email-notice', text: gettext('Email Notification')},\n      {show: twoFactorAuthEnabled, href: '#two-factor-auth', text: gettext('Two-Factor Authentication')},\n      {show: enableWechatWork, href: '#social-auth', text: gettext('Social Login')},\n      {show: enableDingtalk, href: '#social-auth', text: gettext('Social Login')},\n      {show: enableDeleteAccount, href: '#del-account', text: gettext('Delete Account')},\n    ];\n\n    this.state = {\n      curItemID: this.sideNavItems[0].href.substr(1)\n    };\n  }\n\n  componentDidMount() {\n    seafileAPI.getUserInfo().then((res) => {\n      this.setState({\n        userInfo: res.data\n      });\n    }).catch(error => {\n      let errMessage = Utils.getErrorMsg(error);\n      toaster.danger(errMessage);\n    });\n  }\n\n  updateUserInfo = (data) => {\n    seafileAPI.updateUserInfo(data).then((res) => {\n      this.setState({\n        userInfo: res.data\n      });\n      toaster.success(gettext('Success'));\n    }).catch((error) => {\n      let errMessage = Utils.getErrorMsg(error);\n      toaster.danger(errMessage);\n    });\n  }\n\n  onSearchedClick = (selectedItem) => {\n    if (selectedItem.is_dir === true) {\n      let url = siteRoot + 'library/' + selectedItem.repo_id + '/' + selectedItem.repo_name + selectedItem.path;\n      navigate(url, {repalce: true});\n    } else {\n      let url = siteRoot + 'lib/' + selectedItem.repo_id + '/file' + Utils.encodePath(selectedItem.path);\n      let newWindow = window.open('about:blank');\n      newWindow.location.href = url;\n    }\n  }\n\n  handleContentScroll = (e) => {\n    const scrollTop = e.target.scrollTop;\n    const scrolled = this.sideNavItems.filter((item, index) => {\n      return item.show && document.getElementById(item.href.substr(1)).offsetTop - 45 < scrollTop;\n    });\n    if (scrolled.length) {\n      this.setState({\n        curItemID: scrolled[scrolled.length -1].href.substr(1)\n      });\n    }\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <div className=\"h-100 d-flex flex-column\">\n          <div className=\"top-header d-flex justify-content-between\">\n            <a href={siteRoot}>\n              <img src={mediaUrl + logoPath} height={logoHeight} width={logoWidth} title={siteTitle} alt=\"logo\" />\n            </a>\n            <CommonToolbar onSearchedClick={this.onSearchedClick} />\n          </div>\n          <div className=\"flex-auto d-flex o-hidden\">\n            <div className=\"side-panel o-auto\">\n              <SideNav data={this.sideNavItems} curItemID={this.state.curItemID} />\n            </div>\n            <div className=\"main-panel d-flex flex-column\">\n              <h2 className=\"heading\">{gettext('Settings')}</h2>\n              <div className=\"content position-relative\" onScroll={this.handleContentScroll}>\n                <div id=\"user-basic-info\" className=\"setting-item\">\n                  <h3 className=\"setting-item-heading\">{gettext('Profile Setting')}</h3>\n                  <UserAvatarForm  />\n                  {this.state.userInfo && <UserBasicInfoForm userInfo={this.state.userInfo} updateUserInfo={this.updateUserInfo} />}\n                </div>\n                {canUpdatePassword &&\n                <div id=\"update-user-passwd\" className=\"setting-item\">\n                  <h3 className=\"setting-item-heading\">{gettext('Password')}</h3>\n                  <a href={`${siteRoot}accounts/password/change/`} className=\"btn btn-outline-primary\">{passwordOperationText}</a>\n                </div>\n                }\n\n                {enableGetAuthToken && <WebAPIAuthToken />}\n                {enableWebdavSecret && <WebdavPassword />}\n                {enableAddressBook && this.state.userInfo &&\n                  <ListInAddressBook userInfo={this.state.userInfo} updateUserInfo={this.updateUserInfo} />}\n                <LanguageSetting />\n                {isPro && <EmailNotice />}\n                {twoFactorAuthEnabled && <TwoFactorAuthentication />}\n                {enableWechatWork && <SocialLogin />}\n                {enableDingtalk && <SocialLoginDingtalk />}\n                {enableDeleteAccount && <DeleteAccount />}\n              </div>\n            </div>\n          </div>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nReactDOM.render(\n  <Settings />,\n  document.getElementById('wrapper')\n);\n"],"sourceRoot":""}