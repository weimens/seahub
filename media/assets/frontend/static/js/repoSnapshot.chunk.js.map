{"version":3,"sources":["components/dialog/confirm-restore-repo.js","repo-snapshot.js"],"names":["ConfirmRestoreRepo","props","action","setState","btnDisabled","restoreRepo","state","this","toggle","formActionURL","csrfToken","centered","isOpen","gettext","color","onClick","disabled","Component","window","app","pageOptions","repoID","repoName","canRestoreRepo","commitID","commitTime","commitDesc","commitRelativeTime","showAuthor","authorAvatarURL","authorName","authorNickName","RepoSnapshot","toggleDialog","isConfirmDialogOpen","onSearchedClick","selectedItem","is_dir","url","siteRoot","repo_id","repo_name","path","navigate","repalce","Utils","encodePath","open","location","href","goBack","e","preventDefault","history","back","renderFolder","folderPath","folderItems","isLoading","seafileAPI","listCommitDir","then","res","data","dirent_list","catch","error","errorMsg","getErrorMsg","clickFolderPath","renderPath","pathList","split","Fragment","bind","map","item","index","length","key","slice","join","revertRepo","toaster","success","danger","className","src","mediaUrl","logoPath","height","logoHeight","width","logoWidth","title","siteTitle","alt","dangerouslySetInnerHTML","__html","generateDialogTitle","encodeURIComponent","React","Content","theadData","text","FolderItem","handleMouseOver","isIconShown","handleMouseOut","restoreItem","joinPath","name","type","revertFolder","revertFile","onMouseOver","onMouseOut","getFolderIconUrl","getFileIconUrl","obj_id","target","bytesToSize","size","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/repoSnapshot.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Modal, ModalHeader, ModalBody, ModalFooter, Button } from 'reactstrap';\nimport { gettext } from '../../utils/constants';\n\nconst propTypes = {\n  restoreRepo: PropTypes.func.isRequired,\n  toggle: PropTypes.func.isRequired\n};\n\nclass ConfirmRestoreRepo extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      btnDisabled: false\n    };\n  }\n\n  action = () => {\n    this.setState({\n      btnDisabled: true\n    });\n    this.props.restoreRepo();\n  }\n\n  render() {\n    const {formActionURL, csrfToken, toggle} = this.props;\n    return (\n      <Modal centered={true} isOpen={true} toggle={toggle}>\n        <ModalHeader toggle={toggle}>{gettext('Restore Library')}</ModalHeader>\n        <ModalBody>\n          <p>{gettext('Are you sure you want to restore this library?')}</p>\n        </ModalBody>\n        <ModalFooter>\n          <Button color=\"secondary\" onClick={toggle}>{gettext('Cancel')}</Button>\n          <Button color=\"primary\" onClick={this.action} disabled={this.state.btnDisabled}>{gettext('Restore')}</Button>\n        </ModalFooter>\n      </Modal>\n    );\n  }\n}\n\nConfirmRestoreRepo.propTypes = propTypes;\n\nexport default ConfirmRestoreRepo;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { navigate } from '@reach/router';\nimport { Utils } from './utils/utils';\nimport { gettext, siteRoot, mediaUrl, logoPath, logoWidth, logoHeight, siteTitle } from './utils/constants';\nimport { seafileAPI } from './utils/seafile-api';\nimport Loading from './components/loading';\nimport ModalPortal from './components/modal-portal';\nimport toaster from './components/toast';\nimport CommonToolbar from './components/toolbar/common-toolbar';\nimport ConfirmRestoreRepo from './components/dialog/confirm-restore-repo';\n\nimport './css/toolbar.css';\nimport './css/search.css';\n\nimport './css/repo-snapshot.css';\n\nconst {\n  repoID, repoName, canRestoreRepo,\n  commitID, commitTime, commitDesc, commitRelativeTime,\n  showAuthor, authorAvatarURL, authorName, authorNickName\n} = window.app.pageOptions;\n\nclass RepoSnapshot extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoading: true,\n      errorMsg: '',\n      folderPath: '/',\n      folderItems: [],\n      isConfirmDialogOpen: false\n    };\n  }\n\n  componentDidMount() {\n    this.renderFolder(this.state.folderPath);\n  }\n\n  toggleDialog = () => {\n    this.setState({\n      isConfirmDialogOpen: !this.state.isConfirmDialogOpen\n    });\n  }\n\n  onSearchedClick = (selectedItem) => {\n    if (selectedItem.is_dir === true) {\n      let url = siteRoot + 'library/' + selectedItem.repo_id + '/' + selectedItem.repo_name + selectedItem.path;\n      navigate(url, {repalce: true});\n    } else {\n      let url = siteRoot + 'lib/' + selectedItem.repo_id + '/file' + Utils.encodePath(selectedItem.path);\n      let newWindow = window.open('about:blank');\n      newWindow.location.href = url;\n    }\n  }\n\n  goBack = (e) => {\n    e.preventDefault();\n    window.history.back();\n  }\n\n  renderFolder = (folderPath) => {\n    this.setState({\n      folderPath: folderPath,\n      folderItems: [],\n      isLoading: true\n    });\n\n    seafileAPI.listCommitDir(repoID, commitID, folderPath).then((res) => {\n      this.setState({\n        isLoading: false,\n        folderItems: res.data.dirent_list\n      });\n    }).catch((error) => {\n      this.setState({\n        isLoading: false,\n        errorMsg: Utils.getErrorMsg(error, true) // true: show login tip if 403\n      });\n    });\n  }\n\n  clickFolderPath = (folderPath, e) => {\n    e.preventDefault();\n    this.renderFolder(folderPath);\n  }\n\n  renderPath = () => {\n    const path = this.state.folderPath;\n    const pathList = path.split('/');\n\n    if (path == '/') {\n      return repoName;\n    }\n\n    return (\n      <React.Fragment>\n        <a href=\"#\" onClick={this.clickFolderPath.bind(this, '/')}>{repoName}</a>\n        <span> / </span>\n        {pathList.map((item, index) => {\n          if (index > 0 && index != pathList.length - 1) {\n            return (\n              <React.Fragment key={index}>\n                <a href=\"#\" onClick={this.clickFolderPath.bind(this, pathList.slice(0, index+1).join('/'))}>{pathList[index]}</a>\n                <span> / </span>\n              </React.Fragment>\n            );\n          }\n        }\n        )}\n        {pathList[pathList.length - 1]}\n      </React.Fragment>\n    );\n  }\n\n  restoreRepo = () => {\n    seafileAPI.revertRepo(repoID, commitID).then((res) => {\n      this.toggleDialog();\n      toaster.success(gettext('Successfully restored the library.'));\n    }).catch((error) => {\n      let errorMsg = Utils.getErrorMsg(error);\n      this.toggleDialog();\n      toaster.danger(errorMsg);\n    });\n  }\n\n  render() {\n    const { isConfirmDialogOpen, folderPath } = this.state;\n\n    return (\n      <React.Fragment>\n        <div className=\"h-100 d-flex flex-column\">\n          <div className=\"top-header d-flex justify-content-between\">\n            <a href={siteRoot}>\n              <img src={mediaUrl + logoPath} height={logoHeight} width={logoWidth} title={siteTitle} alt=\"logo\" />\n            </a>\n            <CommonToolbar onSearchedClick={this.onSearchedClick} />\n          </div>\n          <div className=\"flex-auto container-fluid pt-4 pb-6 o-auto\">\n            <div className=\"row\">\n              <div className=\"col-md-10 offset-md-1\">\n                <h2 dangerouslySetInnerHTML={{__html: Utils.generateDialogTitle(gettext('{placeholder} Snapshot'), repoName) + ` <span class=\"heading-commit-time\">(${commitTime})</span>`}}></h2>\n                <a href=\"#\" className=\"go-back\" title={gettext('Back')} onClick={this.goBack}>\n                  <span className=\"fas fa-chevron-left\"></span>\n                </a>\n                {folderPath == '/' && (\n                  <div className=\"d-flex mb-2 align-items-center\">\n                    <p className=\"m-0\">{commitDesc}</p>\n                    <div className=\"ml-4 border-left pl-4 d-flex align-items-center\">\n                      {showAuthor ? (\n                        <React.Fragment>\n                          <img src={authorAvatarURL} width=\"20\" height=\"20\" alt=\"\" className=\"rounded mr-1\" />\n                          <a href={`${siteRoot}profile/${encodeURIComponent(authorName)}/`}>{authorNickName}</a>\n                        </React.Fragment>\n                      ) : <span>{gettext('Unknown')}</span>}\n                      <p className=\"m-0 ml-2\" dangerouslySetInnerHTML={{__html: commitRelativeTime}}></p>\n                    </div>\n                  </div>\n                )}\n                <div className=\"d-flex justify-content-between align-items-center op-bar\">\n                  <p className=\"m-0\">{gettext('Current path: ')}{this.renderPath()}</p>\n                  {(folderPath == '/' && canRestoreRepo) &&\n                  <button className=\"btn btn-secondary op-bar-btn\" onClick={this.toggleDialog}>{gettext('Restore')}</button>\n                  }\n                </div>\n                <Content\n                  data={this.state}\n                  renderFolder={this.renderFolder}\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n        {isConfirmDialogOpen &&\n        <ModalPortal>\n          <ConfirmRestoreRepo\n            restoreRepo={this.restoreRepo}\n            toggle={this.toggleDialog}\n          />\n        </ModalPortal>\n        }\n      </React.Fragment>\n    );\n  }\n}\n\nclass Content extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.theadData = [\n      {width: '5%', text: ''},\n      {width: '55%', text: gettext('Name')},\n      {width: '20%', text: gettext('Size')},\n      {width: '20%', text: ''}\n    ];\n  }\n\n  render() {\n    const { isLoading, errorMsg, folderPath, folderItems } = this.props.data;\n\n    if (isLoading) {\n      return <Loading />;\n    }\n\n    if (errorMsg) {\n      return <p className=\"error mt-6 text-center\">{errorMsg}</p>;\n    }\n\n    return (\n      <table className=\"table-hover\">\n        <thead>\n          <tr>\n            {this.theadData.map((item, index) => {\n              return <th key={index} width={item.width}>{item.text}</th>;\n            })}\n          </tr>\n        </thead>\n        <tbody>\n          {folderItems.map((item, index) => {\n            return <FolderItem\n              key={index}\n              item={item}\n              folderPath={folderPath}\n              renderFolder={this.props.renderFolder}\n            />;\n          })\n          }\n        </tbody>\n      </table>\n    );\n  }\n}\n\nclass FolderItem extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      isIconShown: false\n    };\n  }\n\n  handleMouseOver = () => {\n    this.setState({isIconShown: true});\n  }\n\n  handleMouseOut = () => {\n    this.setState({isIconShown: false});\n  }\n\n  restoreItem = (e) => {\n    e.preventDefault();\n\n    const item = this.props.item;\n    const path = Utils.joinPath(this.props.folderPath, item.name);\n    const request = item.type == 'dir' ?\n      seafileAPI.revertFolder(repoID, path, commitID):\n      seafileAPI.revertFile(repoID, path, commitID);\n    request.then((res) => {\n      toaster.success(gettext('Successfully restored 1 item.'));\n    }).catch((error) => {\n      let errorMsg = Utils.getErrorMsg(error);\n      toaster.danger(errorMsg);\n    });\n  }\n\n  renderFolder = (e) => {\n    e.preventDefault();\n\n    const item = this.props.item;\n    const { folderPath } = this.props;\n    this.props.renderFolder(Utils.joinPath(folderPath, item.name));\n  }\n\n  render() {\n    const item = this.props.item;\n    const { isIconShown } = this.state;\n    const { folderPath } = this.props;\n\n    return item.type == 'dir' ? (\n      <tr onMouseOver={this.handleMouseOver} onMouseOut={this.handleMouseOut}>\n        <td className=\"text-center\"><img src={Utils.getFolderIconUrl()} alt={gettext('Directory')} width=\"24\" /></td>\n        <td><a href=\"#\" onClick={this.renderFolder}>{item.name}</a></td>\n        <td></td>\n        <td>\n          <a href=\"#\" className={`action-icon sf2-icon-reply ${isIconShown ? '': 'invisible'}`} onClick={this.restoreItem} title={gettext('Restore')}></a>\n        </td>\n      </tr>\n    ) : (\n      <tr onMouseOver={this.handleMouseOver} onMouseOut={this.handleMouseOut}>\n        <td className=\"text-center\"><img src={Utils.getFileIconUrl(item.name)} alt={gettext('File')} width=\"24\" /></td>\n        <td><a href={`${siteRoot}repo/${repoID}/snapshot/files/?obj_id=${item.obj_id}&commit_id=${commitID}&p=${encodeURIComponent(Utils.joinPath(folderPath, item.name))}`} target=\"_blank\">{item.name}</a></td>\n        <td>{Utils.bytesToSize(item.size)}</td>\n        <td>\n          <a href=\"#\" className={`action-icon sf2-icon-reply ${isIconShown ? '': 'invisible'}`} onClick={this.restoreItem} title={gettext('Restore')}></a>\n          <a href={`${siteRoot}repo/${repoID}/${item.obj_id}/download/?file_name=${encodeURIComponent(item.name)}&p=${encodeURIComponent(Utils.joinPath(folderPath, item.name))}`} className={`action-icon sf2-icon-download ${isIconShown ? '': 'invisible'}`} title={gettext('Download')}></a>\n        </td>\n      </tr>\n    );\n  }\n}\n\nReactDOM.render(\n  <RepoSnapshot />,\n  document.getElementById('wrapper')\n);\n"],"sourceRoot":""}